services:
  postgres:
    image: postgres
    container_name: kestra_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: changeme
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    container_name: kestra
    pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: "root"
    command: server standalone --worker-thread=128
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
      - /etc/letsencrypt/live/kestra.example.com:/app/ssl
    environment:
      KESTRA_CONFIGURATION: |
        micronaut:
          security:
            x509:
              enabled: true
          ssl:
            enabled: true
          server:
            ssl:
              port: 8443
              enabled: true
              client-authentication: want
              key-store:
                path: file:/app/ssl/server.p12
                password: changeme
                type: PKCS12
              trust-store:
                path: file:/app/ssl/truststore.jks
                password: changeme
                type: JKS
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: changeme
        kestra:
          encryption:
            secret-key: changeme # openssl rand -base64 32
          server:
            basic-auth:
              enabled: true
              username: "admin@exapmple.com" # it must be a valid email address
              password: changeme
            liveness:
              enabled: true
              interval: 5s
              timeout: 45s
              initialDelay: 1m
              heartbeatInterval: 3s
          repository:
            type: postgres
          storage:
            type: local
            local:
              base-path: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmp-dir:
              path: /tmp/kestra-wd/tmp
          url: https://localhost:8443/
    ports:
      - "8443:8443"
    depends_on:
      postgres:
        condition: service_started

volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local

networks:
  default:
    external: true
    name: Secure